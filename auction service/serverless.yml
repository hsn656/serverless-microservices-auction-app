service: auction-service

plugins:
  - serverless-bundle

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}

  region: eu-central-1
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}
    - ${file(iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yaml):AuctionsTable}
    AuctionsBucket: ${file(resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(resources/AuctionsBucket.yml):AuctionsBucketPolicy}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          cors: true
          integration: lambda
          authorizer: ${self:custom.Authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          integration: lambda
          authorizer: ${self:custom.Authorizer}

  getAuctionById:
    handler: src/handlers/getAuctionById.handler
    events:
      - http:
          method: GET
          path: /auctions/{id}
          integration: lambda
          authorizer: ${self:custom.Authorizer}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auctions/{id}/bid
          integration: lambda
          authorizer: ${self:custom.Authorizer}

  processAuction:
    handler: src/handlers/processAuction.handler
    # events:
    #   - schedule: rate(1 minute)

custom:
  bundle:
    linting: false
  MailQueue:
    arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  AuctionsBucket:
    name: auctions-bucket-hsn656-${self:provider.stage}
  Authorizer:
      name: PrivateAuthorizer
      type: COGNITO_USER_POOLS
      arn: arn:aws:cognito-idp:${aws:region}:${aws:accountId}:userpool/eu-central-1_D8nQnDQ8y
      claims:
        - email


